variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:latest
  CONTAINER_NAME: game

stages:
  - build
  - deploy


build_docker_image:
  stage: build
  image: docker:18.09.7
  services:
    - docker:18.09.7-dind
  before_script:
    - echo "Building Docker Image..."
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    # comment the following lines to work with real api
    # - COMMON_BUILD_ARGS="--build-arg=VITE_APP_API_MOCK=true --build-arg=VITE_CLEAR_AUTHENTICATED=false --build-arg=GENERATE_SOURCEMAP=false --build-arg=NODE_ENV=development --build-arg=VITE_APP_API_URL=http://localhost:3010/"
    # - ADDITIONAL_BUILD_ARGS=""
    # uncomment the following lines to work with real api
    - COMMON_BUILD_ARGS="--build-arg=VITE_MIN_WITHDRAWAL_VALUE_IN_RUSH=10 --build-arg=VITE_WITHDRAWAL_COMMISSION=0.1 --build-arg=VITE_ALLOWED_CHATROOMS=EN,ES,PT --build-arg=VITE_BTC_TO_BITS=1000000"
    - |
      if [ "$CI_COMMIT_BRANCH" = "feat/infra" ]; then
        ADDITIONAL_BUILD_ARGS=" --build-arg=VITE_API_URL=https://api.devtestlab.site --build-arg=VITE_WEBSOCKETS_URL=https://api.devtestlab.site --build-arg=VITE_APP_DOMAIN=devtestlab.site --build-arg=VITE_ENV=dev"
      elif [ "$CI_COMMIT_BRANCH" = "develop" ]; then
        ADDITIONAL_BUILD_ARGS=" --build-arg=VITE_API_URL=https://api.devtestlab.site --build-arg=VITE_WEBSOCKETS_URL=https://api.devtestlab.site --build-arg=VITE_APP_DOMAIN=devtestlab.site --build-arg=VITE_ENV=dev"
      elif [ "$CI_COMMIT_BRANCH" = "release" ]; then
        ADDITIONAL_BUILD_ARGS=" --build-arg=VITE_API_URL=https://api.reltestlab.site --build-arg=VITE_WEBSOCKETS_URL=https://api.reltestlab.site --build-arg=VITE_APP_DOMAIN=reltestlab.site --build-arg=VITE_ENV=prod"
      elif [ "$CI_COMMIT_BRANCH" = "releaseprod" ]; then
        ADDITIONAL_BUILD_ARGS=" --build-arg=VITE_API_URL=https://api.crashouse.com --build-arg=VITE_WEBSOCKETS_URL=https://api.crashouse.com --build-arg=VITE_APP_DOMAIN=crashouse.com --build-arg=VITE_ENV=prod"
      elif [ "$CI_COMMIT_BRANCH" = "main" ]; then
        ADDITIONAL_BUILD_ARGS=" --build-arg=VITE_API_URL=https://api.crashouse.com --build-arg=VITE_WEBSOCKETS_URL=https://api.crashouse.com --build-arg=VITE_APP_DOMAIN=crashouse.com --build-arg=VITE_ENV=prod"
      fi
    - echo "$COMMON_BUILD_ARGS"
    - echo "$ADDITIONAL_BUILD_ARGS"
    - docker build -t $IMAGE_TAG $COMMON_BUILD_ARGS $ADDITIONAL_BUILD_ARGS .
    - docker tag $IMAGE_TAG $IMAGE_TAG_LATEST
    - docker push $IMAGE_TAG
    - docker push $IMAGE_TAG_LATEST
  only:
    - main
    - develop
    - release
    - releaseprod
    - feat/infra

deploy_dev:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache openssh-client
    - |
      if [ "$CI_COMMIT_REF_NAME" == "feat/infra" ]; then
        echo "$SSH_KEY_DEVELOP" > ./deploy_key
        export SERVER_IPS=$IPS_DEVELOP
      elif [ "$CI_COMMIT_REF_NAME" == "develop" ]; then
        echo "$SSH_KEY_DEVELOP" > ./deploy_key
        export SERVER_IPS=$IPS_DEVELOP
      elif [ "$CI_COMMIT_REF_NAME" == "release" ]; then
        echo "$SSH_KEY_DEVELOP" > ./deploy_key
        export SERVER_IPS=$IPS_RELEASE
      elif [ "$CI_COMMIT_REF_NAME" == "releaseprod" ]; then
        echo "$SSH_KEY_MAIN" > ./deploy_key
        export SERVER_IPS=$IPS_RELEASEPROD
      elif [ "$CI_COMMIT_REF_NAME" == "main" ]; then
        echo "$SSH_KEY_MAIN" > ./deploy_key
        export SERVER_IPS=$IPS_MAIN
      fi
    - chmod 600 ./deploy_key
    - ssh -o StrictHostKeyChecking=no -i ./deploy_key root@$SERVER_IPS "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY && cd /home/app && docker-compose pull $CONTAINER_NAME && docker-compose stop $CONTAINER_NAME && docker-compose up -d $CONTAINER_NAME"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "feat/infra"'
      when: on_success
    - if: '$CI_COMMIT_REF_NAME == "develop"'
      when: on_success
    - if: '$CI_COMMIT_REF_NAME == "release"'
      when: on_success
    - if: '$CI_COMMIT_REF_NAME == "releaseprod"'
      when: on_success